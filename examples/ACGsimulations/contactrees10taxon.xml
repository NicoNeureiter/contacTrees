<beast version='2.0'
       namespace='beast.pkgmgmt:beast.base.core:beast.base.inference:beast.base.evolution.alignment:beast.base.evolution.tree.coalescent:beast.base.util:beast.base.math:beast.evolution.nuc:beast.base.evolution.operator:beast.base.inference.operator:beast.base.evolution.sitemodel:beast.base.evolution.substitutionmodel:beast.base.evolution.likelihood:beast.base.inference.parameter
                 :beast.evolution.alignment
                 :beast.evolution.operators
                 :beast.core
                 :beast.core.parameter
                 :contactrees
                 :contactrees.model
                 :contactrees.util
                 :contactrees.operators'>

<data id="data:nodata" name="alignment">
    <sequence id="seq_A" taxon="A" totalcount="4" value="ACGT"/>
    <sequence id="seq_B" taxon="B" totalcount="4" value="ACGT"/>
    <sequence id="seq_C" taxon="C" totalcount="4" value="ACGT"/>
    <sequence id="seq_D" taxon="D" totalcount="4" value="ACGT"/>
    <sequence id="seq_E" taxon="E" totalcount="4" value="ACGT"/>
    <sequence id="seq_F" taxon="F" totalcount="4" value="ACGT"/>
    <sequence id="seq_G" taxon="G" totalcount="4" value="ACGT"/>
    <sequence id="seq_H" taxon="H" totalcount="4" value="ACGT"/>
    <sequence id="seq_I" taxon="I" totalcount="4" value="ACGT"/>
    <sequence id="seq_J" taxon="J" totalcount="4" value="ACGT"/>
</data>

<stateNode spec="BlockSet" id="allBlocks" network="@acg">
	<plate var="n" range="b0,b1,b2,b3,b4,b5,b6,b7,b8,b9">
		<block spec="Block" id="$(n)"/>
	</plate>
</stateNode>

<run id="mcmc" spec="MCMC" chainLength="$(chainLength)">

 	<state id="state" storeEvery="$(logInterval)">
    	<!-- Define the conversion graph -->
        <stateNode id="acg" spec="ConversionGraph">
	        <taxonset id="taxa" spec="TaxonSet" alignment="@data:nodata"/>
        </stateNode>
    	
		<plate var="n" range="b0,b1,b2,b3,b4,b5,b6,b7,b8,b9">
			<stateNode idref="$(n)"/>
		</plate>
        
        <stateNode id="pMove" spec="RealParameter" estimate="false" value="$(pMove)"/>
		<stateNode id="conversionRate" spec="RealParameter" estimate="false" value="$(convRate)"/>
        <stateNode id="popSize" spec="RealParameter" estimate="false" value="$(popSize)"/>
 	</state>
 	
 	<init id="RandomACG" spec="beast.base.evolution.tree.coalescent.RandomTree" estimate="false" initial="@acg" taxa="@data:nodata">
        <populationModel id="ConstantPopulation0.t" spec="ConstantPopulation" popSize="@popSize"/>
    </init>

   <distribution id="posterior" spec="beast.base.inference.CompoundDistribution">
        <distribution id="prior" spec="beast.base.inference.CompoundDistribution">
            <distribution id="CoalescentConstant.t:treeSim" spec="Coalescent">
                <populationModel id="ConstantPopulation.t" spec="ConstantPopulation" popSize="@popSize"/>
                <treeIntervals id="TreeIntervals.t:treeSim" spec="beast.base.evolution.tree.TreeIntervals" tree="@acg"/>
            </distribution>

            <distribution id="ConversionPrior.t:treeSim" spec="contactrees.model.ConversionPrior" network="@acg" conversionRate="@conversionRate"/>
            <distribution id="ConvMovePrior.t:treeSim" spec="ConversionMovePrior" network="@acg" blockSet="@allBlocks" pMove="@pMove"/>
    
        </distribution>
    </distribution>
	

 <!--  
	<operatorschedule id="schedule" spec="contactrees.test.OrderedOperatorSchedule">
	 	<operator id="SimumlateOp" spec="contactrees.test.SimulatorOperator" network="@acg" blockSet="@allBlocks" 
	 	 		  pMove="@pMove" conversionRate="@conversionRate" weight="1.0">
	 		<populationModel spec="ConstantPopulation" popSize="$(popSize)"/>
	 	</operator>		 
 -->  
      
 <!-- 
 -->
	 	<operator id="CFWilsonBalding.t" spec="CFWilsonBalding" acg="@acg" alpha="0.1" conversionRate="@conversionRate"
	 			  pMove="@pMove" blockSet="@allBlocks" includeRoot="false" weight="10.0"/>
		<operator id="CFUniform.t" spec="CFUniform" acg="@acg" conversionRate="@conversionRate" 
				  pMove="@pMove" blockSet="@allBlocks" weight="10.0"/>
	 	<operator id="CFNarrowExchange.t" spec="CFSubtreeExchange" acg="@acg" conversionRate="@conversionRate"
	 		      pMove="@pMove" blockSet="@allBlocks" isNarrow="true" weight="10.0"/>      
	 	<operator id="CFWideExchange.t" spec="CFSubtreeExchange" acg="@acg" conversionRate="@conversionRate" 
	 			  pMove="@pMove" blockSet="@allBlocks" isNarrow="false" weight="10.0"/>
		  
	 	<operator id="AddRemoveConversion.t" spec="AddRemoveConversion" weight="200.0" acg="@acg" pMove="@pMove" conversionRate="@conversionRate" blockSet="@allBlocks" networkPrior="@ConversionPrior.t:treeSim"/>
	 	<operator id="ACGscale.t" spec="ACGScaler" acg="@acg" scaleFactor="0.9" weight="10.0"/>

	 	<operator id="ACGscale.rootOnly.t" spec="ACGScaler" acg="@acg" scaleFactor="0.9" weight="10.0" rootOnly="true"/> 
 
	 
<!--
	</operatorschedule>
-->
	
	
    <logger id="screenlog" logEvery="20000">
        <log idref="posterior"/>
        <log idref="prior"/>
        <log spec="ACGStatsLogger" network="@acg" blockSet="@allBlocks"/>
    </logger>

    <logger logEvery="$(logInterval)" fileName="$(filebase).stats">
        <log spec="ACGStatsLogger" network="@acg" blockSet="@allBlocks"/>
        <log idref="posterior"/>
        <log idref="prior"/>
    </logger>

    <logger logEvery="20000" fileName="$(filebase).trees">
    	<log spec="ACGWithMetaDataLogger" network="@acg" blockSet="@allBlocks"/>
    </logger>
</run>
  
</beast>
